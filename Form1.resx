<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>